generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model assessments {
  id               String           @id
  fundId           String
  organizationName String
  projectName      String?
  assessmentType   AssessmentType   @default(AI_POWERED)
  status           AssessmentStatus @default(COMPLETED)
  overallScore     Decimal?         @db.Decimal(5, 2)
  scoringResults   Json
  assessmentData   Json
  createdAt        DateTime         @default(now())
  updatedAt        DateTime
  moduleType       ModuleType       @default(FUNDING)
  funds            funds            @relation(fields: [fundId], references: [id], onDelete: Cascade)

  @@index([createdAt])
  @@index([fundId])
  @@index([moduleType])
  @@index([status])
}

model background_jobs {
  id                 String     @id
  fundId             String
  type               JobType
  status             JobStatus  @default(PENDING)
  progress           Int        @default(0)
  totalDocuments     Int        @default(0)
  processedDocuments Int        @default(0)
  metadata           Json       @default("{}")
  errorMessage       String?
  startedAt          DateTime?
  completedAt        DateTime?
  createdAt          DateTime   @default(now())
  updatedAt          DateTime
  moduleType         ModuleType @default(FUNDING)
  funds              funds      @relation(fields: [fundId], references: [id], onDelete: Cascade)

  @@index([fundId])
  @@index([moduleType])
  @@index([status])
  @@index([type])
}

model fund_documents {
  id           String       @id
  fundId       String
  documentType DocumentType
  filename     String
  mimeType     String
  fileSize     Int
  s3Key        String
  uploadedAt   DateTime     @default(now())
  moduleType   ModuleType   @default(FUNDING)
  funds        funds        @relation(fields: [fundId], references: [id], onDelete: Cascade)

  @@index([moduleType])
}

model funds {
  id                          String            @id
  name                        String
  description                 String?
  status                      FundStatus        @default(DRAFT)
  createdAt                   DateTime          @default(now())
  updatedAt                   DateTime
  applicationFormAnalysis     Json?
  selectionCriteriaAnalysis   Json?
  goodExamplesAnalysis        Json?
  brainAssembledAt            DateTime?
  brainVersion                Int               @default(1)
  fundBrain                   Json?
  outputTemplatesAnalysis     Json?
  moduleType                  ModuleType        @default(FUNDING)
  openSearchIndex             String?
  policyDocumentAnalysis      Json?
  procurementRuleAnalysis     Json?
  complianceStandardAnalysis  Json?
  procurementTemplateAnalysis Json?
  assessments                 assessments[]
  background_jobs             background_jobs[]
  fund_documents              fund_documents[]

  @@index([moduleType])
}

enum AssessmentStatus {
  DRAFT
  IN_PROGRESS
  COMPLETED
  FAILED
}

enum AssessmentType {
  AI_POWERED
  PATTERN_BASED
  MANUAL
}

enum DocumentType {
  APPLICATION_FORM
  SELECTION_CRITERIA
  GOOD_EXAMPLES
  OUTPUT_TEMPLATES
  PROCUREMENT_RULE
  COMPLIANCE_STANDARD
  PROCUREMENT_TEMPLATE
  POLICY_DOCUMENT
}

enum FundStatus {
  DRAFT
  ACTIVE
  CLOSED
}

enum JobStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

enum JobType {
  RAG_PROCESSING
  DOCUMENT_ANALYSIS
}

enum ModuleType {
  FUNDING
  PROCUREMENT
  PROCUREMENT_ADMIN
  WORLDBANK
  WORLDBANK_ADMIN
  WORLDBANKGROUP
  WORLDBANKGROUP_ADMIN
}
